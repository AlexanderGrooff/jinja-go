name: Benchmark

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  benchmark:
    name: Performance regression check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest
      
      - name: Run benchmark on base branch
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            git checkout ${{ github.base_ref }}
            go test ./pkg/ansiblejinja -bench=. -benchmem -count=5 > /tmp/bench-base.txt
          else
            # For main branch pushes, use previous commit
            git checkout HEAD~1
            go test ./pkg/ansiblejinja -bench=. -benchmem -count=5 > /tmp/bench-base.txt
          fi
      
      - name: Run benchmark on current branch/commit
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            git checkout FETCH_HEAD
          else
            git checkout HEAD
          fi
          go test ./pkg/ansiblejinja -bench=. -benchmem -count=5 > /tmp/bench-head.txt
      
      - name: Compare benchmarks
        run: |
          echo "## Benchmark Comparison" > $GITHUB_STEP_SUMMARY
          echo "Comparing benchmark performance between base and current code" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          benchstat /tmp/bench-base.txt /tmp/bench-head.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      
      - name: Check for significant regressions
        run: |
          # This will output performance changes summary
          BENCHSTAT_OUT=$(benchstat /tmp/bench-base.txt /tmp/bench-head.txt)
          echo "$BENCHSTAT_OUT"
          
          # Flag if performance degraded by more than 10%
          if echo "$BENCHSTAT_OUT" | grep -E '\+[0-9]{2,}(\.[0-9]+)?%' | grep -v "allocs"; then
            echo "Warning: Performance regression detected! See benchmark comparison for details."
            # Don't fail the build, just warn
            # exit 1
          fi 